services:
  db:
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - app-redis-data:/data

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"

  backend:
    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    # command: sleep infinity  # Infinite loop to keep container alive doing nothing
    ports:
      - "8000:80"
    depends_on:
      - db
      - redis
      - mailcatcher
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost/api/v1/utils/health-check/",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - REDIS_SERVER=redis
      - SMTP_HOST=mailcatcher
    volumes:
      - ./backend/:/app
    # command: sleep infinity  # Infinite loop to keep container alive doing nothing
    command: /start-reload.sh

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=${API_HOST?Variable not set}
        - NODE_ENV=production
    ports:
      - "5173:80"

volumes:
  app-db-data:
  app-redis-data:
