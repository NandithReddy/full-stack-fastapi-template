---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: api
  namespace: fastapicloud
  labels:
    networking.knative.dev/visibility: cluster-local
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/min-scale: "1"
    spec:
      serviceAccountName: fastapicloud
      initContainers:
        - name: api-init
          image: api
          command: ["sh", "./scripts/prestart-local.sh"]
          env:
            - name: ENABLE_LOCALSTACK
              value: "true"
            - name: POSTGRES_SERVER
              value: postgresql.services.svc.cluster.local
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "fastapicloud"
            - name: NATS_HOST_NAME
              value: nats://nats.services.svc.cluster.local:4222
            - name: NATS_CREDS
              value: "logging"
            - name: BUILDER_API_URL
              value: http://builder.fastapicloud.svc.cluster.local:8000
            - name: BUILDER_API_KEY
              value: "testf"
            - name: DEPLOYMENTS_BUCKET_NAME
              value: "fastapicloud-deployments-local"
            - name: BUILDER_QUEUE_NAME
              value: "builder-queue"
            - name: REDIS_SERVER
              value: redis-master.services.svc.cluster.local

      containers:
        - name: api
          image: api
          ports:
            - containerPort: 8000
          command: ["fastapi", "run", "--reload", "app/main.py"]
          env:
            - name: SECRET_KEY
              value: "test"
            - name: ENABLE_LOCALSTACK
              value: "true"
            - name: POSTGRES_SERVER
              value: postgresql.services.svc.cluster.local
            - name: NATS_HOST_NAME
              value: nats://nats.services.svc.cluster.local:4222
            - name: POSTHOG_API_KEY
              value: "test"
            - name: POSTHOG_HOST
              value: "http://localhost"
            - name: REDIS_SERVER
              value: redis-master.services.svc.cluster.local
            - name: SMTP_HOST
              value: mailcatcher.services.svc.cluster.local
            - name: LOCALSTACK_HOST_NAME
              value: localstack.services.svc.cluster.local
            - name: BUILDER_API_URL
              value: http://builder.fastapicloud.svc.cluster.local:8000
            - name: AWS_ACCESS_KEY_ID
              value: "test"
            - name: AWS_SECRET_ACCESS_KEY
              value: "test"
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "fastapicloud"
            - name: RESERVED_APP_NAMES
              value: "fastapicloud,fastapilabs,fastapi-cloud,fastapi-labs,fastapilab,fastapi-lab,fastapi,fastapi-cli,sqlmodel,typer,asyncer"
            - name: EMAILABLE_KEY
              value: "test_34b0646c05fb1ca43dd2"
            - name: BUILDER_API_KEY
              value: "test"
            - name: DEPLOYMENTS_BUCKET_NAME
              value: "fastapicloud-deployments-local"
            - name: BUILDER_QUEUE_NAME
              value: "builder-queue"
            - name: DEPLOYMENTS_DOMAIN
              value: "localfastapicloud.space"
            - name: BACKEND_GITHUB_CLIENT_ID
              value: "xxx"
            - name: BACKEND_GITHUB_CLIENT_SECRET
              value: "yyy"
            - name: BACKEND_CORS_ORIGINS
              value: http://localhost:5173,https://dashboard.localfastapicloud.com
          envFrom:
            - configMapRef:
                name: backend-config
                optional: true
            - secretRef:
                name: backend-secrets
                optional: true
          readinessProbe:
            httpGet:
              path: /api/v1/utils/health-check/
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          # securityContext:
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   readOnlyRootFilesystem: false
          #   # privileged: true
          #   # runAsUser: 0
