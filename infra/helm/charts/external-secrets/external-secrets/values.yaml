external-secrets:
  replicaCount: 1

  image:
    pullPolicy: IfNotPresent
    # -- The flavour of tag you want to use
    # There are different image flavours available, like distroless and ubi.
    # Please see GitHub release notes for image tags for these flavors.
    # By default, the distroless image is used.
    flavour: ""

  # -- If set, install and upgrade CRDs through helm chart.
  installCRDs: true

  crds:
    # -- If true, create CRDs for Cluster External Secret.
    createClusterExternalSecret: true
    # -- If true, create CRDs for Cluster Secret Store.
    createClusterSecretStore: true
    # -- If true, create CRDs for Cluster Generator.
    createClusterGenerator: true
    # -- If true, create CRDs for Cluster Push Secret.
    createClusterPushSecret: true
    # -- If true, create CRDs for Push Secret.
    createPushSecret: true
    conversion:
      # -- If webhook is set to false this also needs to be set to false otherwise the kubeapi will be hammered because the conversion is looking for a webhook endpoint.
      enabled: true

  nameOverride: ""
  fullnameOverride: ""
  namespaceOverride: ""

  # -- Additional labels added to all helm chart resources.
  commonLabels: {}

  # -- If true, external-secrets will perform leader election between instances to ensure no more
  # than one instance of external-secrets operates at a time.
  leaderElect: false

  # -- If true external secrets will use recommended kubernetes
  # annotations as prometheus metric labels.
  extendedMetricLabels: false

  # -- Must be used with scopedNamespace. If true, create scoped RBAC roles under the scoped namespace
  # and implicitly disable cluster stores and cluster external secrets
  scopedRBAC: false

  # -- If true the OpenShift finalizer permissions will be added to RBAC
  openshiftFinalizers: true

  # -- if true, the operator will process cluster external secret. Else, it will ignore them.
  processClusterExternalSecret: true

  # -- if true, the operator will process cluster push secret. Else, it will ignore them.
  processClusterPushSecret: true

  # -- if true, the operator will process cluster store. Else, it will ignore them.
  processClusterStore: true

  # -- if true, the operator will process push secret. Else, it will ignore them.
  processPushSecret: true

  # -- Specifies whether an external secret operator deployment be created.
  createOperator: true

  # -- Specifies the number of concurrent ExternalSecret Reconciles external-secret executes at
  # a time.
  concurrent: 1

  serviceAccount:
    # -- Specifies whether a service account should be created.
    create: true
    # -- Automounts the service account token in all containers of the pod
    automount: true
    # -- Annotations to add to the service account.
    annotations: {}
    # -- Extra Labels to add to the service account.
    extraLabels: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template.
    name: "external-secrets-sa"

  resources:
    {}
    # requests:
    #   cpu: 10m
    #   memory: 32Mi

  serviceMonitor:
    # -- Specifies whether to create a ServiceMonitor resource for collecting Prometheus metrics
    enabled: false

    # -- namespace where you want to install ServiceMonitors
    namespace: ""

    # -- Additional labels
    additionalLabels: {}

    # --  Interval to scrape metrics
    interval: 30s

    # -- Timeout if metrics can't be retrieved in given time interval
    scrapeTimeout: 25s

    # -- Let prometheus add an exported_ prefix to conflicting labels
    honorLabels: false

    # -- Metric relabel configs to apply to samples before ingestion. [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs)
    metricRelabelings: []
    # - action: replace
    #   regex: (.*)
    #   replacement: $1
    #   sourceLabels:
    #   - exported_namespace
    #   targetLabel: namespace

    # -- Relabel configs to apply to samples before ingestion. [Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config)
    relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace

  metrics:
    listen:
      port: 8080

    service:
      # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
      enabled: false

      # -- Metrics service port to scrape
      port: 8080

      # -- Additional service annotations
      annotations: {}

  # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    # maxUnavailable: 1

  webhook:
    # -- Specifies whether a webhook deployment be created. If set to false, crds.conversion.enabled should also be set to false otherwise the kubeapi will be hammered because the conversion is looking for a webhook endpoint.
    create: true
    # -- Specifices the time to check if the cert is valid
    certCheckInterval: "5m"
    # -- Specifices the lookaheadInterval for certificate validity
    lookaheadInterval: ""
    replicaCount: 1
    # -- Specifies whether validating webhooks should be created with failurePolicy: Fail or Ignore
    failurePolicy: Fail
    image:
      pullPolicy: IfNotPresent
      # -- The flavour of tag you want to use
      flavour: ""
    nameOverride: ""
    fullnameOverride: ""
    serviceAccount:
      # -- Specifies whether a service account should be created.
      create: true
      # -- Automounts the service account token in all containers of the pod
      automount: true
      # -- Annotations to add to the service account.
      annotations: {}
      # -- Extra Labels to add to the service account.
      extraLabels: {}
      # -- The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template.
      name: ""

    certManager:
      # -- Enabling cert-manager support will disable the built in secret and
      # switch to using cert-manager (installed separately) to automatically issue
      # and renew the webhook certificate. This chart does not install
      # cert-manager for you, See https://cert-manager.io/docs/
      enabled: false
      # -- Automatically add the cert-manager.io/inject-ca-from annotation to the
      # webhooks and CRDs. As long as you have the cert-manager CA Injector
      # enabled, this will automatically setup your webhook's CA to the one used
      # by cert-manager. See https://cert-manager.io/docs/concepts/ca-injector
      addInjectorAnnotations: true
      cert:
        # -- Create a certificate resource within this chart. See
        # https://cert-manager.io/docs/usage/certificate/
        create: true
        # -- For the Certificate created by this chart, setup the issuer. See
        # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.IssuerSpec
        issuerRef:
          group: cert-manager.io
          kind: "ClusterIssuer"
          name: "letsencrypt-production"
        # -- Add extra annotations to the Certificate resource.
        annotations: {}

    # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
      # maxUnavailable: 1

    metrics:
      listen:
        port: 8080

      service:
        # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
        enabled: false

        # -- Metrics service port to scrape
        port: 8080

        # -- Additional service annotations
        annotations: {}

    resources:
      {}
      # requests:
      #   cpu: 10m
      #   memory: 32Mi

    # -- Manage the service through which the webhook is reached.
    service:
      # -- Whether the service object should be enabled or not (it is expected to exist).
      enabled: true
      # -- Custom annotations for the webhook service.
      annotations: {}
      # -- Custom labels for the webhook service.
      labels: {}
      # -- The service type of the webhook service.
      type: ClusterIP
      # -- If the webhook service type is LoadBalancer, you can assign a specific load balancer IP here.
      # Check the documentation of your load balancer provider to see if/how this should be used.
      loadBalancerIP: ""

  certController:
    # -- Specifies whether a certificate controller deployment be created.
    create: true
    requeueInterval: "5m"
    replicaCount: 1

    image:
      pullPolicy: IfNotPresent
      flavour: ""
    nameOverride: ""
    fullnameOverride: ""
    rbac:
      # -- Specifies whether role and rolebinding resources should be created.
      create: true
    serviceAccount:
      # -- Specifies whether a service account should be created.
      create: true
      # -- Automounts the service account token in all containers of the pod
      automount: true
      # -- Annotations to add to the service account.
      annotations: {}
      # -- Extra Labels to add to the service account.
      extraLabels: {}
      # -- The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template.
      name: ""

    # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
      # maxUnavailable: 1

    metrics:
      listen:
        port: 8080

      service:
        # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
        enabled: false

        # -- Metrics service port to scrape
        port: 8080

        # -- Additional service annotations
        annotations: {}

    resources:
      {}
      # requests:
      #   cpu: 10m
      #   memory: 32Mi

config:
  kind: SecretStore
  stores:
    {}
    # secrets-manager:
    #   annotations: {}
    #   provider:
    #     aws:
    #       service: SecretsManager
    #       region: us-east-1
    #       # role: "arn:aws:iam::XYZZYXXYZZYX:role/external-secrets-4ee8c22"
