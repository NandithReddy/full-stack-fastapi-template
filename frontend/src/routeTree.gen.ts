/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyUpdateEmailRouteImport } from './routes/verify-update-email'
import { Route as VerifyEmailRouteImport } from './routes/verify-email'
import { Route as TeamInvitationRouteImport } from './routes/team-invitation'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverPasswordRouteImport } from './routes/recover-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DeviceRouteImport } from './routes/device'
import { Route as CallbackRouteImport } from './routes/callback'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutSettingsRouteImport } from './routes/_layout/settings'
import { Route as LayoutTeamSlugIndexRouteImport } from './routes/_layout/$teamSlug/index'
import { Route as LayoutTeamsNewRouteImport } from './routes/_layout/teams/new'
import { Route as LayoutTeamsAllRouteImport } from './routes/_layout/teams/all'
import { Route as LayoutTeamSlugSettingsRouteImport } from './routes/_layout/$teamSlug/settings'
import { Route as LayoutTeamSlugNewAppRouteImport } from './routes/_layout/$teamSlug/new-app'
import { Route as LayoutTeamSlugAppsIndexRouteImport } from './routes/_layout/$teamSlug/apps/index'
import { Route as LayoutTeamSlugAppsAppSlugIndexRouteImport } from './routes/_layout/$teamSlug/apps/$appSlug/index'
import { Route as LayoutTeamSlugAppsAppSlugTabRouteImport } from './routes/_layout/$teamSlug/apps/$appSlug/$tab'
import { Route as LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRouteImport } from './routes/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId'

const VerifyUpdateEmailRoute = VerifyUpdateEmailRouteImport.update({
  id: '/verify-update-email',
  path: '/verify-update-email',
  getParentRoute: () => rootRouteImport,
} as any)
const VerifyEmailRoute = VerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamInvitationRoute = TeamInvitationRouteImport.update({
  id: '/team-invitation',
  path: '/team-invitation',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverPasswordRoute = RecoverPasswordRouteImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DeviceRoute = DeviceRouteImport.update({
  id: '/device',
  path: '/device',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackRoute = CallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSettingsRoute = LayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamSlugIndexRoute = LayoutTeamSlugIndexRouteImport.update({
  id: '/$teamSlug/',
  path: '/$teamSlug/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamsNewRoute = LayoutTeamsNewRouteImport.update({
  id: '/teams/new',
  path: '/teams/new',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamsAllRoute = LayoutTeamsAllRouteImport.update({
  id: '/teams/all',
  path: '/teams/all',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamSlugSettingsRoute = LayoutTeamSlugSettingsRouteImport.update({
  id: '/$teamSlug/settings',
  path: '/$teamSlug/settings',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamSlugNewAppRoute = LayoutTeamSlugNewAppRouteImport.update({
  id: '/$teamSlug/new-app',
  path: '/$teamSlug/new-app',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamSlugAppsIndexRoute = LayoutTeamSlugAppsIndexRouteImport.update({
  id: '/$teamSlug/apps/',
  path: '/$teamSlug/apps/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutTeamSlugAppsAppSlugIndexRoute =
  LayoutTeamSlugAppsAppSlugIndexRouteImport.update({
    id: '/$teamSlug/apps/$appSlug/',
    path: '/$teamSlug/apps/$appSlug/',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutTeamSlugAppsAppSlugTabRoute =
  LayoutTeamSlugAppsAppSlugTabRouteImport.update({
    id: '/$teamSlug/apps/$appSlug/$tab',
    path: '/$teamSlug/apps/$appSlug/$tab',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute =
  LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRouteImport.update({
    id: '/$teamSlug/apps/$appSlug/deployments/$deploymentId',
    path: '/$teamSlug/apps/$appSlug/deployments/$deploymentId',
    getParentRoute: () => LayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/callback': typeof CallbackRoute
  '/device': typeof DeviceRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/team-invitation': typeof TeamInvitationRoute
  '/verify-email': typeof VerifyEmailRoute
  '/verify-update-email': typeof VerifyUpdateEmailRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/$teamSlug/new-app': typeof LayoutTeamSlugNewAppRoute
  '/$teamSlug/settings': typeof LayoutTeamSlugSettingsRoute
  '/teams/all': typeof LayoutTeamsAllRoute
  '/teams/new': typeof LayoutTeamsNewRoute
  '/$teamSlug': typeof LayoutTeamSlugIndexRoute
  '/$teamSlug/apps': typeof LayoutTeamSlugAppsIndexRoute
  '/$teamSlug/apps/$appSlug/$tab': typeof LayoutTeamSlugAppsAppSlugTabRoute
  '/$teamSlug/apps/$appSlug': typeof LayoutTeamSlugAppsAppSlugIndexRoute
  '/$teamSlug/apps/$appSlug/deployments/$deploymentId': typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}
export interface FileRoutesByTo {
  '/callback': typeof CallbackRoute
  '/device': typeof DeviceRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/team-invitation': typeof TeamInvitationRoute
  '/verify-email': typeof VerifyEmailRoute
  '/verify-update-email': typeof VerifyUpdateEmailRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/$teamSlug/new-app': typeof LayoutTeamSlugNewAppRoute
  '/$teamSlug/settings': typeof LayoutTeamSlugSettingsRoute
  '/teams/all': typeof LayoutTeamsAllRoute
  '/teams/new': typeof LayoutTeamsNewRoute
  '/$teamSlug': typeof LayoutTeamSlugIndexRoute
  '/$teamSlug/apps': typeof LayoutTeamSlugAppsIndexRoute
  '/$teamSlug/apps/$appSlug/$tab': typeof LayoutTeamSlugAppsAppSlugTabRoute
  '/$teamSlug/apps/$appSlug': typeof LayoutTeamSlugAppsAppSlugIndexRoute
  '/$teamSlug/apps/$appSlug/deployments/$deploymentId': typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/callback': typeof CallbackRoute
  '/device': typeof DeviceRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/team-invitation': typeof TeamInvitationRoute
  '/verify-email': typeof VerifyEmailRoute
  '/verify-update-email': typeof VerifyUpdateEmailRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/$teamSlug/new-app': typeof LayoutTeamSlugNewAppRoute
  '/_layout/$teamSlug/settings': typeof LayoutTeamSlugSettingsRoute
  '/_layout/teams/all': typeof LayoutTeamsAllRoute
  '/_layout/teams/new': typeof LayoutTeamsNewRoute
  '/_layout/$teamSlug/': typeof LayoutTeamSlugIndexRoute
  '/_layout/$teamSlug/apps/': typeof LayoutTeamSlugAppsIndexRoute
  '/_layout/$teamSlug/apps/$appSlug/$tab': typeof LayoutTeamSlugAppsAppSlugTabRoute
  '/_layout/$teamSlug/apps/$appSlug/': typeof LayoutTeamSlugAppsAppSlugIndexRoute
  '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId': typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/callback'
    | '/device'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/team-invitation'
    | '/verify-email'
    | '/verify-update-email'
    | '/settings'
    | '/'
    | '/$teamSlug/new-app'
    | '/$teamSlug/settings'
    | '/teams/all'
    | '/teams/new'
    | '/$teamSlug'
    | '/$teamSlug/apps'
    | '/$teamSlug/apps/$appSlug/$tab'
    | '/$teamSlug/apps/$appSlug'
    | '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/callback'
    | '/device'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/team-invitation'
    | '/verify-email'
    | '/verify-update-email'
    | '/settings'
    | '/'
    | '/$teamSlug/new-app'
    | '/$teamSlug/settings'
    | '/teams/all'
    | '/teams/new'
    | '/$teamSlug'
    | '/$teamSlug/apps'
    | '/$teamSlug/apps/$appSlug/$tab'
    | '/$teamSlug/apps/$appSlug'
    | '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
  id:
    | '__root__'
    | '/_layout'
    | '/callback'
    | '/device'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/team-invitation'
    | '/verify-email'
    | '/verify-update-email'
    | '/_layout/settings'
    | '/_layout/'
    | '/_layout/$teamSlug/new-app'
    | '/_layout/$teamSlug/settings'
    | '/_layout/teams/all'
    | '/_layout/teams/new'
    | '/_layout/$teamSlug/'
    | '/_layout/$teamSlug/apps/'
    | '/_layout/$teamSlug/apps/$appSlug/$tab'
    | '/_layout/$teamSlug/apps/$appSlug/'
    | '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  CallbackRoute: typeof CallbackRoute
  DeviceRoute: typeof DeviceRoute
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  TeamInvitationRoute: typeof TeamInvitationRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
  VerifyUpdateEmailRoute: typeof VerifyUpdateEmailRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-update-email': {
      id: '/verify-update-email'
      path: '/verify-update-email'
      fullPath: '/verify-update-email'
      preLoaderRoute: typeof VerifyUpdateEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/team-invitation': {
      id: '/team-invitation'
      path: '/team-invitation'
      fullPath: '/team-invitation'
      preLoaderRoute: typeof TeamInvitationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/device': {
      id: '/device'
      path: '/device'
      fullPath: '/device'
      preLoaderRoute: typeof DeviceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlug/': {
      id: '/_layout/$teamSlug/'
      path: '/$teamSlug'
      fullPath: '/$teamSlug'
      preLoaderRoute: typeof LayoutTeamSlugIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teams/new': {
      id: '/_layout/teams/new'
      path: '/teams/new'
      fullPath: '/teams/new'
      preLoaderRoute: typeof LayoutTeamsNewRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/teams/all': {
      id: '/_layout/teams/all'
      path: '/teams/all'
      fullPath: '/teams/all'
      preLoaderRoute: typeof LayoutTeamsAllRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlug/settings': {
      id: '/_layout/$teamSlug/settings'
      path: '/$teamSlug/settings'
      fullPath: '/$teamSlug/settings'
      preLoaderRoute: typeof LayoutTeamSlugSettingsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlug/new-app': {
      id: '/_layout/$teamSlug/new-app'
      path: '/$teamSlug/new-app'
      fullPath: '/$teamSlug/new-app'
      preLoaderRoute: typeof LayoutTeamSlugNewAppRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlug/apps/': {
      id: '/_layout/$teamSlug/apps/'
      path: '/$teamSlug/apps'
      fullPath: '/$teamSlug/apps'
      preLoaderRoute: typeof LayoutTeamSlugAppsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlug/apps/$appSlug/': {
      id: '/_layout/$teamSlug/apps/$appSlug/'
      path: '/$teamSlug/apps/$appSlug'
      fullPath: '/$teamSlug/apps/$appSlug'
      preLoaderRoute: typeof LayoutTeamSlugAppsAppSlugIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlug/apps/$appSlug/$tab': {
      id: '/_layout/$teamSlug/apps/$appSlug/$tab'
      path: '/$teamSlug/apps/$appSlug/$tab'
      fullPath: '/$teamSlug/apps/$appSlug/$tab'
      preLoaderRoute: typeof LayoutTeamSlugAppsAppSlugTabRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId': {
      id: '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId'
      path: '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
      fullPath: '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
      preLoaderRoute: typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutTeamSlugNewAppRoute: typeof LayoutTeamSlugNewAppRoute
  LayoutTeamSlugSettingsRoute: typeof LayoutTeamSlugSettingsRoute
  LayoutTeamsAllRoute: typeof LayoutTeamsAllRoute
  LayoutTeamsNewRoute: typeof LayoutTeamsNewRoute
  LayoutTeamSlugIndexRoute: typeof LayoutTeamSlugIndexRoute
  LayoutTeamSlugAppsIndexRoute: typeof LayoutTeamSlugAppsIndexRoute
  LayoutTeamSlugAppsAppSlugTabRoute: typeof LayoutTeamSlugAppsAppSlugTabRoute
  LayoutTeamSlugAppsAppSlugIndexRoute: typeof LayoutTeamSlugAppsAppSlugIndexRoute
  LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute: typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutTeamSlugNewAppRoute: LayoutTeamSlugNewAppRoute,
  LayoutTeamSlugSettingsRoute: LayoutTeamSlugSettingsRoute,
  LayoutTeamsAllRoute: LayoutTeamsAllRoute,
  LayoutTeamsNewRoute: LayoutTeamsNewRoute,
  LayoutTeamSlugIndexRoute: LayoutTeamSlugIndexRoute,
  LayoutTeamSlugAppsIndexRoute: LayoutTeamSlugAppsIndexRoute,
  LayoutTeamSlugAppsAppSlugTabRoute: LayoutTeamSlugAppsAppSlugTabRoute,
  LayoutTeamSlugAppsAppSlugIndexRoute: LayoutTeamSlugAppsAppSlugIndexRoute,
  LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute:
    LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  CallbackRoute: CallbackRoute,
  DeviceRoute: DeviceRoute,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  TeamInvitationRoute: TeamInvitationRoute,
  VerifyEmailRoute: VerifyEmailRoute,
  VerifyUpdateEmailRoute: VerifyUpdateEmailRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
