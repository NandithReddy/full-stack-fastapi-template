/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyUpdateEmailImport } from './routes/verify-update-email'
import { Route as VerifyEmailImport } from './routes/verify-email'
import { Route as TeamInvitationImport } from './routes/team-invitation'
import { Route as SignupImport } from './routes/signup'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as RecoverPasswordImport } from './routes/recover-password'
import { Route as LoginImport } from './routes/login'
import { Route as CallbackImport } from './routes/callback'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutDeviceImport } from './routes/_layout/device'
import { Route as LayoutTeamSlugIndexImport } from './routes/_layout/$teamSlug/index'
import { Route as LayoutTeamsNewImport } from './routes/_layout/teams/new'
import { Route as LayoutTeamsAllImport } from './routes/_layout/teams/all'
import { Route as LayoutTeamSlugSettingsImport } from './routes/_layout/$teamSlug/settings'
import { Route as LayoutTeamSlugNewAppImport } from './routes/_layout/$teamSlug/new-app'
import { Route as LayoutTeamSlugAppsIndexImport } from './routes/_layout/$teamSlug/apps/index'
import { Route as LayoutTeamSlugAppsAppSlugIndexImport } from './routes/_layout/$teamSlug/apps/$appSlug/index'
import { Route as LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdImport } from './routes/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId'

// Create/Update Routes

const VerifyUpdateEmailRoute = VerifyUpdateEmailImport.update({
  id: '/verify-update-email',
  path: '/verify-update-email',
  getParentRoute: () => rootRoute,
} as any)

const VerifyEmailRoute = VerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const TeamInvitationRoute = TeamInvitationImport.update({
  id: '/team-invitation',
  path: '/team-invitation',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CallbackRoute = CallbackImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDeviceRoute = LayoutDeviceImport.update({
  id: '/device',
  path: '/device',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamSlugIndexRoute = LayoutTeamSlugIndexImport.update({
  id: '/$teamSlug/',
  path: '/$teamSlug/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamsNewRoute = LayoutTeamsNewImport.update({
  id: '/teams/new',
  path: '/teams/new',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamsAllRoute = LayoutTeamsAllImport.update({
  id: '/teams/all',
  path: '/teams/all',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamSlugSettingsRoute = LayoutTeamSlugSettingsImport.update({
  id: '/$teamSlug/settings',
  path: '/$teamSlug/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamSlugNewAppRoute = LayoutTeamSlugNewAppImport.update({
  id: '/$teamSlug/new-app',
  path: '/$teamSlug/new-app',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamSlugAppsIndexRoute = LayoutTeamSlugAppsIndexImport.update({
  id: '/$teamSlug/apps/',
  path: '/$teamSlug/apps/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamSlugAppsAppSlugIndexRoute =
  LayoutTeamSlugAppsAppSlugIndexImport.update({
    id: '/$teamSlug/apps/$appSlug/',
    path: '/$teamSlug/apps/$appSlug/',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute =
  LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdImport.update({
    id: '/$teamSlug/apps/$appSlug/deployments/$deploymentId',
    path: '/$teamSlug/apps/$appSlug/deployments/$deploymentId',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/callback': {
      id: '/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/team-invitation': {
      id: '/team-invitation'
      path: '/team-invitation'
      fullPath: '/team-invitation'
      preLoaderRoute: typeof TeamInvitationImport
      parentRoute: typeof rootRoute
    }
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/verify-update-email': {
      id: '/verify-update-email'
      path: '/verify-update-email'
      fullPath: '/verify-update-email'
      preLoaderRoute: typeof VerifyUpdateEmailImport
      parentRoute: typeof rootRoute
    }
    '/_layout/device': {
      id: '/_layout/device'
      path: '/device'
      fullPath: '/device'
      preLoaderRoute: typeof LayoutDeviceImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$teamSlug/new-app': {
      id: '/_layout/$teamSlug/new-app'
      path: '/$teamSlug/new-app'
      fullPath: '/$teamSlug/new-app'
      preLoaderRoute: typeof LayoutTeamSlugNewAppImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$teamSlug/settings': {
      id: '/_layout/$teamSlug/settings'
      path: '/$teamSlug/settings'
      fullPath: '/$teamSlug/settings'
      preLoaderRoute: typeof LayoutTeamSlugSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/teams/all': {
      id: '/_layout/teams/all'
      path: '/teams/all'
      fullPath: '/teams/all'
      preLoaderRoute: typeof LayoutTeamsAllImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/teams/new': {
      id: '/_layout/teams/new'
      path: '/teams/new'
      fullPath: '/teams/new'
      preLoaderRoute: typeof LayoutTeamsNewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$teamSlug/': {
      id: '/_layout/$teamSlug/'
      path: '/$teamSlug'
      fullPath: '/$teamSlug'
      preLoaderRoute: typeof LayoutTeamSlugIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$teamSlug/apps/': {
      id: '/_layout/$teamSlug/apps/'
      path: '/$teamSlug/apps'
      fullPath: '/$teamSlug/apps'
      preLoaderRoute: typeof LayoutTeamSlugAppsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$teamSlug/apps/$appSlug/': {
      id: '/_layout/$teamSlug/apps/$appSlug/'
      path: '/$teamSlug/apps/$appSlug'
      fullPath: '/$teamSlug/apps/$appSlug'
      preLoaderRoute: typeof LayoutTeamSlugAppsAppSlugIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId': {
      id: '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId'
      path: '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
      fullPath: '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
      preLoaderRoute: typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutDeviceRoute: typeof LayoutDeviceRoute
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutTeamSlugNewAppRoute: typeof LayoutTeamSlugNewAppRoute
  LayoutTeamSlugSettingsRoute: typeof LayoutTeamSlugSettingsRoute
  LayoutTeamsAllRoute: typeof LayoutTeamsAllRoute
  LayoutTeamsNewRoute: typeof LayoutTeamsNewRoute
  LayoutTeamSlugIndexRoute: typeof LayoutTeamSlugIndexRoute
  LayoutTeamSlugAppsIndexRoute: typeof LayoutTeamSlugAppsIndexRoute
  LayoutTeamSlugAppsAppSlugIndexRoute: typeof LayoutTeamSlugAppsAppSlugIndexRoute
  LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute: typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDeviceRoute: LayoutDeviceRoute,
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutTeamSlugNewAppRoute: LayoutTeamSlugNewAppRoute,
  LayoutTeamSlugSettingsRoute: LayoutTeamSlugSettingsRoute,
  LayoutTeamsAllRoute: LayoutTeamsAllRoute,
  LayoutTeamsNewRoute: LayoutTeamsNewRoute,
  LayoutTeamSlugIndexRoute: LayoutTeamSlugIndexRoute,
  LayoutTeamSlugAppsIndexRoute: LayoutTeamSlugAppsIndexRoute,
  LayoutTeamSlugAppsAppSlugIndexRoute: LayoutTeamSlugAppsAppSlugIndexRoute,
  LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute:
    LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/team-invitation': typeof TeamInvitationRoute
  '/verify-email': typeof VerifyEmailRoute
  '/verify-update-email': typeof VerifyUpdateEmailRoute
  '/device': typeof LayoutDeviceRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/$teamSlug/new-app': typeof LayoutTeamSlugNewAppRoute
  '/$teamSlug/settings': typeof LayoutTeamSlugSettingsRoute
  '/teams/all': typeof LayoutTeamsAllRoute
  '/teams/new': typeof LayoutTeamsNewRoute
  '/$teamSlug': typeof LayoutTeamSlugIndexRoute
  '/$teamSlug/apps': typeof LayoutTeamSlugAppsIndexRoute
  '/$teamSlug/apps/$appSlug': typeof LayoutTeamSlugAppsAppSlugIndexRoute
  '/$teamSlug/apps/$appSlug/deployments/$deploymentId': typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}

export interface FileRoutesByTo {
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/team-invitation': typeof TeamInvitationRoute
  '/verify-email': typeof VerifyEmailRoute
  '/verify-update-email': typeof VerifyUpdateEmailRoute
  '/device': typeof LayoutDeviceRoute
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/$teamSlug/new-app': typeof LayoutTeamSlugNewAppRoute
  '/$teamSlug/settings': typeof LayoutTeamSlugSettingsRoute
  '/teams/all': typeof LayoutTeamsAllRoute
  '/teams/new': typeof LayoutTeamsNewRoute
  '/$teamSlug': typeof LayoutTeamSlugIndexRoute
  '/$teamSlug/apps': typeof LayoutTeamSlugAppsIndexRoute
  '/$teamSlug/apps/$appSlug': typeof LayoutTeamSlugAppsAppSlugIndexRoute
  '/$teamSlug/apps/$appSlug/deployments/$deploymentId': typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/callback': typeof CallbackRoute
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/team-invitation': typeof TeamInvitationRoute
  '/verify-email': typeof VerifyEmailRoute
  '/verify-update-email': typeof VerifyUpdateEmailRoute
  '/_layout/device': typeof LayoutDeviceRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/$teamSlug/new-app': typeof LayoutTeamSlugNewAppRoute
  '/_layout/$teamSlug/settings': typeof LayoutTeamSlugSettingsRoute
  '/_layout/teams/all': typeof LayoutTeamsAllRoute
  '/_layout/teams/new': typeof LayoutTeamsNewRoute
  '/_layout/$teamSlug/': typeof LayoutTeamSlugIndexRoute
  '/_layout/$teamSlug/apps/': typeof LayoutTeamSlugAppsIndexRoute
  '/_layout/$teamSlug/apps/$appSlug/': typeof LayoutTeamSlugAppsAppSlugIndexRoute
  '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId': typeof LayoutTeamSlugAppsAppSlugDeploymentsDeploymentIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/callback'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/team-invitation'
    | '/verify-email'
    | '/verify-update-email'
    | '/device'
    | '/settings'
    | '/'
    | '/$teamSlug/new-app'
    | '/$teamSlug/settings'
    | '/teams/all'
    | '/teams/new'
    | '/$teamSlug'
    | '/$teamSlug/apps'
    | '/$teamSlug/apps/$appSlug'
    | '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/callback'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/team-invitation'
    | '/verify-email'
    | '/verify-update-email'
    | '/device'
    | '/settings'
    | '/'
    | '/$teamSlug/new-app'
    | '/$teamSlug/settings'
    | '/teams/all'
    | '/teams/new'
    | '/$teamSlug'
    | '/$teamSlug/apps'
    | '/$teamSlug/apps/$appSlug'
    | '/$teamSlug/apps/$appSlug/deployments/$deploymentId'
  id:
    | '__root__'
    | '/_layout'
    | '/callback'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/team-invitation'
    | '/verify-email'
    | '/verify-update-email'
    | '/_layout/device'
    | '/_layout/settings'
    | '/_layout/'
    | '/_layout/$teamSlug/new-app'
    | '/_layout/$teamSlug/settings'
    | '/_layout/teams/all'
    | '/_layout/teams/new'
    | '/_layout/$teamSlug/'
    | '/_layout/$teamSlug/apps/'
    | '/_layout/$teamSlug/apps/$appSlug/'
    | '/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  CallbackRoute: typeof CallbackRoute
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
  TeamInvitationRoute: typeof TeamInvitationRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
  VerifyUpdateEmailRoute: typeof VerifyUpdateEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  CallbackRoute: CallbackRoute,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
  TeamInvitationRoute: TeamInvitationRoute,
  VerifyEmailRoute: VerifyEmailRoute,
  VerifyUpdateEmailRoute: VerifyUpdateEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/callback",
        "/login",
        "/recover-password",
        "/reset-password",
        "/signup",
        "/team-invitation",
        "/verify-email",
        "/verify-update-email"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/device",
        "/_layout/settings",
        "/_layout/",
        "/_layout/$teamSlug/new-app",
        "/_layout/$teamSlug/settings",
        "/_layout/teams/all",
        "/_layout/teams/new",
        "/_layout/$teamSlug/",
        "/_layout/$teamSlug/apps/",
        "/_layout/$teamSlug/apps/$appSlug/",
        "/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId"
      ]
    },
    "/callback": {
      "filePath": "callback.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/recover-password": {
      "filePath": "recover-password.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/team-invitation": {
      "filePath": "team-invitation.tsx"
    },
    "/verify-email": {
      "filePath": "verify-email.tsx"
    },
    "/verify-update-email": {
      "filePath": "verify-update-email.tsx"
    },
    "/_layout/device": {
      "filePath": "_layout/device.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings": {
      "filePath": "_layout/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/$teamSlug/new-app": {
      "filePath": "_layout/$teamSlug/new-app.tsx",
      "parent": "/_layout"
    },
    "/_layout/$teamSlug/settings": {
      "filePath": "_layout/$teamSlug/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/teams/all": {
      "filePath": "_layout/teams/all.tsx",
      "parent": "/_layout"
    },
    "/_layout/teams/new": {
      "filePath": "_layout/teams/new.tsx",
      "parent": "/_layout"
    },
    "/_layout/$teamSlug/": {
      "filePath": "_layout/$teamSlug/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/$teamSlug/apps/": {
      "filePath": "_layout/$teamSlug/apps/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/$teamSlug/apps/$appSlug/": {
      "filePath": "_layout/$teamSlug/apps/$appSlug/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId": {
      "filePath": "_layout/$teamSlug/apps/$appSlug/deployments/$deploymentId.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
