name: Deploy UI - Production
on:
  release:

permissions:
  contents: read
  deployments: write
  issues: write
  pull-requests: write
  statuses: write

jobs:
  build-and-deploy-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v4
      - run: rm -rf ./frontend/dist
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm ci
        working-directory: frontend
      - run: npm run build
        env:
          VITE_API_URL: ${{ vars.API_URL_PRODUCTION }}
        working-directory: frontend
      - name: Deploy to Cloudflare Pages
        # hashFiles returns an empty string if there are no files
        if: hashFiles('./frontend/dist/*')
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # TODO: On GA, change projectName to the actual production project name
          # projectName: dashboard-fastapicloud-com
          projectName: dashboard-fastapicloud-work
          directory: './frontend/dist'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: 'main'

# https://github.com/marketplace/actions/alls-green#why
  ui-alls-green:  # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - build-and-deploy-ui
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
