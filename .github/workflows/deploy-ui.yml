name: Deploy UI
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to, development, staging, production
        required: true
        type: environment
        default: staging

permissions:
  contents: read
  deployments: write
  issues: write
  pull-requests: write
  statuses: write

jobs:
  changes:
    runs-on: depot-ubuntu-22.04
    # Required permissions
    permissions:
      pull-requests: read
      contents: read
    # Set job outputs to values from filter step
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
    - uses: actions/checkout@v5
    # For pull requests it's not necessary to checkout the code but for the main branch it is
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          changed:
            - frontend/**
            - .env
            - .github/workflows/deploy-ui.yml

  build-and-deploy-ui:
    needs:
      - changes
    if: ( needs.changes.outputs.changed == 'true' && (github.event_name != 'pull_request' || github.secret_source == 'Actions'))
    strategy:
      matrix:
        # On workflow dispatch, deploy to a single environment from the user input
        # On push, which is only triggered on master, deploy to all environments
        # On pull request, the deployment will be done as previews, deploy only to staging and development
        environment: ${{ github.event_name == 'workflow_dispatch' && fromJson(format('["{0}"]', github.event.inputs.environment)) || (github.event_name == 'push' && fromJson('["staging", "development", "production"]')) || fromJson('["staging", "development"]') }}
    environment: ${{ matrix.environment }}
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v5
      - run: rm -rf ./frontend/dist
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8"
      - run: npm ci
        working-directory: frontend
      - run: npm run build
        env:
          VITE_API_URL: ${{ vars.API_HOST }}
          VITE_APP_PUBLIC_POSTHOG_HOST: ${{ vars.APP_PUBLIC_POSTHOG_HOST }}
        working-directory: frontend
      - name: Deploy to Cloudflare Pages
        # hashFiles returns an empty string if there are no files
        if: hashFiles('./frontend/dist/*')
        id: deploy
        env:
          PROJECT_NAME: ${{ vars.CLOUDFLARE_PAGES_PROJECT_NAME }}
          BRANCH: ${{ github.event_name == 'pull_request' && 'preview' || ( ( github.event_name == 'push' || github.event_name == 'workflow_dispatch' ) && 'main' ) }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./frontend/dist --project-name=${{ env.PROJECT_NAME }} --branch=${{ env.BRANCH }}
      - name: Install GitHub Actions dependencies
        run: |
          uv venv
          uv pip install -r requirements-github-actions.txt
      - name: Comment Deploy
        run: uv run python ./scripts/deploy_ui_status.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPLOY_URL: ${{ steps.deploy.outputs.deployment-url }}
          COMMIT_SHA: ${{ github.sha }}
          PR_NUMBER: ${{ github.event.number }}
          ENVIRONMENT: ${{ matrix.environment }}

  # https://github.com/marketplace/actions/alls-green#why
  alls-green-deploy-ui:  # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - build-and-deploy-ui
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: build-and-deploy-ui
