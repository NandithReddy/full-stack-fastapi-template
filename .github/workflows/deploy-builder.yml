name: Deploy Builder

on:
  push:
    branches:
      - master
    paths:
      - 'backend/app/*'
      - 'backend/Dockerfile.builder'
      - 'backend/Dockerfile.build'
      - 'backend/builder_entrypoint.sh'
      - 'backend/pyproject.toml'
      - 'backend/uv.lock'
      - 'infra/k8s/builder/builder.yaml'
      - '.github/workflows/deploy-builder.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to, development, staging, production
        required: true
        type: environment
        default: staging

env:
  ECR_REPOSITORY: fastapicloud-builder

jobs:
  deploy-builder:
    if: ( github.event_name != 'pull_request' || github.secret_source == 'Actions' )
    name: Deploy Builder
    strategy:
      matrix:
        # Two environments by default: staging and development, but can be overridden by the user in a workflow dispatch
        # TODO: once production is stable, disallow deploying to production from workflow_dispatch
        environment: ${{ github.event_name == 'workflow_dispatch' && fromJson(format('["{0}"]', github.event.inputs.environment)) || fromJson('["staging", "development"]') }}
    env:
      IMAGE_TAG: ${{ matrix.environment }}-${{ github.sha }}
    runs-on: ${{ matrix.environment }}
    environment: ${{ matrix.environment }}
    steps:
    - uses: actions/checkout@v4
    - name: Install kubectl
      uses: azure/setup-kubectl@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Login to Amazon ECR
      with:
        mask-password: True
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Build and push Docker images to Amazon ECR
      uses: docker/build-push-action@v6
      id: docker-build
      with:
        push: true
        tags: |
          ${{steps.login-ecr.outputs.registry}}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        context: ./backend/
        file: ./backend/Dockerfile.builder
    - name: Update builder deployment
      run: envsubst < infra/k8s/builder/builder.yaml | kubectl apply -f -
      env:
        IMAGE: ${{steps.login-ecr.outputs.registry}}/${{ env.ECR_REPOSITORY }}@${{ steps.docker-build.outputs.digest }}
        DEPLOYMENTS_DOMAIN: "${{ vars.DEPLOYMENTS_DOMAIN }}"
        ENVIRONMENT: ${{ matrix.environment }}
        POSTGRES_SERVER: "${{ vars.POSTGRES_SERVER }}"
        POSTGRES_PORT: "${{ vars.POSTGRES_PORT }}"
        POSTGRES_DB: "${{ vars.POSTGRES_DB }}"
        POSTGRES_USER: "${{ vars.POSTGRES_USER }}"
        POSTGRES_SSL_ENABLED: "${{ vars.POSTGRES_SSL_ENABLED }}"
        ECR_REGISTRY_URL: "${{ vars.ECR_REGISTRY_URL }}"
        AWS_REGION: "${{ vars.AWS_REGION }}"

        # Secrets for the builder
        POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
