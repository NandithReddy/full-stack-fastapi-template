name: Pulumi Deploy
on:
  # TODO: re-enable automatic deployments on staging
  # push:
  #   branches:
  #     - master
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: 'false'

jobs:
  changes:
    runs-on: depot-ubuntu-22.04
    # Required permissions
    permissions:
      pull-requests: read
      contents: read
    # Set job outputs to values from filter step
    outputs:
      k8s: ${{ steps.filter.outputs.k8s }}
      cloudflare: ${{ steps.filter.outputs.cloudflare }}
      workflow: ${{ steps.filter.outputs.workflow }}
    steps:
    - uses: actions/checkout@v4
    # For pull requests it's not necessary to checkout the code but for the main branch it is
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        predicate-quantifier: 'every'
        filters: |
          k8s:
            - 'infra/**'
            - '!infra/cloudflare/**'
            - '!infra/argocd/**'
            - '!infra/helm/**'
          cloudflare:
            - 'infra/cloudflare/**'
          workflow:
            - '.github/workflows/pulumi-deploy.yml'

  pulumi-deploy:
    needs:
      - changes
    if: ${{ needs.changes.outputs.k8s == 'true' || needs.changes.outputs.workflow == 'true' }}
    name: Pulumi Deploy
    runs-on: depot-ubuntu-22.04
    environment: ${{ github.event_name == 'release' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8"
          enable-cache: true
      - name: Configure AWS Credentials for Staging
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Install dependencies
        run: uv sync
        working-directory: infra
      - uses: pulumi/actions@v6
        id: pulumi
        with:
          command: up
          # stack-name: org-name/stack-name # When using an individual account, only use stack-name.
          # production on release, staging on push (if enabled)
          stack-name: ${{ github.event_name == 'release' && 'production' || 'staging' }}
          work-dir: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          CLOUDFLARE_API_TOKEN_SSL: ${{ secrets.CLOUDFLARE_API_TOKEN_SSL }}
          NATS_LOGGING_WRITE_CREDS: ${{ secrets.NATS_CREDS }}
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
      - name: Set up kubeconfig
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}
        run: |
          echo "${{ steps.pulumi.outputs.kubeconfig }}" > kubeconfig.json
          chmod 600 kubeconfig.json
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}
        with:
          limit-access-to-actor: true
        env:
          CLUSTER_NAME: ${{ steps.pulumi.outputs.cluster_name }}
          KUBECONFIG: kubeconfig.json
          CLOUDFLARE_API_TOKEN_DNS: ${{ secrets.CLOUDFLARE_API_TOKEN_DNS }}
          DEPLOYMENT_ENVIRONMENT: ${{ github.event_name == 'release' && 'production' || 'staging' }}
      - run: rm kubeconfig.json
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}

  cloudflare-deploy:
    needs:
      - changes
    if: ${{ needs.changes.outputs.cloudflare == 'true' || needs.changes.outputs.workflow == 'true' }}
    name: Cloudflare Deploy
    runs-on: depot-ubuntu-22.04
    environment: ${{ github.event_name == 'release' && 'production' || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8"
          enable-cache: true
      - name: Install dependencies
        run: uv sync
        working-directory: infra/cloudflare
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: fastapilabs/cloudflare-stack/production
          work-dir: infra/cloudflare
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  # https://github.com/marketplace/actions/alls-green#why
  alls-green-pulumi-deploy:  # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - pulumi-deploy
      - cloudflare-deploy
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: pulumi-deploy, cloudflare-deploy
