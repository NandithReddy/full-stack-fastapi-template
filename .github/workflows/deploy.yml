name: Deploy
on:
  push:
    branches:
      - master
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: 'false'

jobs:
  deploy:
    name: Pulumi Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Configure AWS Credentials for Staging
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-region: ${{ secrets.AWS_REGION_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
      - name: Configure AWS Credentials for Production
        if: github.event_name == 'release'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PRODUCTION }}
          aws-region: ${{ secrets.AWS_REGION_PRODUCTION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRODUCTION }}
      - run: pip install -r requirements.txt
        working-directory: infra
      - uses: pulumi/actions@v5
        id: pulumi
        # staging manually, production on release
        if: github.event_name == 'release'
        with:
          command: up
          # stack-name: org-name/stack-name # When using an individual account, only use stack-name.
          # production on release, staging on push (if enabled)
          stack-name: ${{ github.event_name == 'release' && 'production' || 'staging' }}
          work-dir: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true' }}
        with:
          limit-access-to-actor: true
        env:
          CLUSTER_NAME: ${{ steps.pulumi.outputs.cluster_name }}
          KUBECONFIG_CONTENT: ${{ steps.pulumi.outputs.kubeconfig }}
          CLOUDFLARE_API_TOKEN_DNS: ${{ secrets.CLOUDFLARE_API_TOKEN_DNS }}
          DEPLOYMENT_ENVIRONMENT: ${{ github.event_name == 'release' && 'production' || 'staging' }}
